@model PagedList.IPagedList<Ecommerce01.Models.Product>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Prodotti";
}

<h2>Prodotti</h2>

<p>
    @*@Html.ActionLink("Crea Nuovo", "Create", new { }, new { @class = "btn btn-info" })*@
    <a href="@Url.Action(
            "Create",
            "Products",
            new { })" class="btn btn-default btn-xs">
        <i aria-hidden="true" class="btn btn-default btn-xs far fa-plus-square fa-3x text-success" title="Crea Nuovo"></i>
        Crea Nuovo
        <span class="sr-only">Crea Nuovo</span>
    </a>
    @*<a href="@Url.Action(
            "SetAttribute",
            "Products",
            new { })" class="btn btn-default btn-xs">
        <i aria-hidden="true" class="btn btn-default btn-xs fas fa-cogs fa-3x text-info" title="Imposta Attributi"></i>
        Imposta Attributi
        <span class="sr-only">Imposta Attributi</span>
    </a>*@
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Image)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Tax.Type)
        </th>*@
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().BarCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Category.Description)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Company.Name)
        </th>*@
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Tax.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Stock)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().ReorderPoint)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().VendorPrice)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().VendorProductCode)
        </th>*@
        
        @*<th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Remarks)
        </th>*@
        <th></th>
    </tr>

@foreach (var item in Model)
{
    <tr>
        <td>
            @if (!string.IsNullOrEmpty(item.Image))
            {
                <img src="@Url.Content(item.Image)" alt="Image" style="width:100px;height:150px;max-width: 100%; height: auto;" />
            }
        </td>
        @*<td>
                @Html.DisplayFor(modelItem => item.Tax.Type)
            </td>*@
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BarCode)
        </td>
        <td>
            <i>@Html.DisplayFor(modelItem => item.Category.Description)</i>
        </td>
        @*<td>
                @Html.DisplayFor(modelItem => item.Company.Name)
            </td>*@
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Tax.Description)
        </td>
        <td align="right">
            @Html.DisplayFor(modelItem => item.Stock)
        </td>
        <td align="right">
            @Html.DisplayFor(modelItem => item.ReorderPoint)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.VendorPrice)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.VendorProductCode)
        </td>*@

        
        @*<td>
                @Html.DisplayFor(modelItem => item.Remarks)
            </td>*@
    </tr>
        <tr>
            <td colspan="5">
                @*  <a href="@Url.Action("Edit", "XXXProducts", new { id = item.XXXId })" class="btn btn-default"> *@
                <a href="@Url.Action("Edit", "Products", new { id = item.ProductId })" class="btn btn-default btn-sm">
                    <i aria-hidden="true" class="far fa-edit fa-2x text-info" title="Modifica"></i>
                    <span class="sr-only">Modifica</span>
                </a>
                <a href="@Url.Action("Details", "Products", new { id = item.ProductId })" class="btn btn-default btn-sm">
                    <i aria-hidden="true" class="far fa-list-alt fa-2x text-warning" title="Dettagli"></i>
                    <span class="sr-only">Dettagli</span>
                </a>
                
                @*<a href="@Url.Action("Details", "Products", new { id = item.ProductId })" class="btn btn-default btn-sm">*@
                    <a href="@Url.Action("Index", "ProductAttributeStocks", new { id = item.ProductId })" class="btn btn-default btn-sm">
                        <i aria-hidden="true" class="far fas fa-cogs fa-2x text-info" title="Attributi Stock"></i>
                        <span class="sr-only">Attributi Stock</span>
                    </a>
                
                <a href="@Url.Action("Delete", "Products", new { id = item.ProductId })" class="btn btn-default btn-sm">
                    <i aria-hidden="true" class="far fa-trash-alt fa-2x text-danger" title="Elimina"></i>
                    <span class="sr-only">Elimina</span>
                </a>
            </td>
        </tr>
}

</table>
@if (Model.PageCount > 1)
{
    <h6>@Html.Raw(string.Format("Pagina: {0}, di: {1}", (Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber), Model.PageCount))</h6>;
    @Html.PagedListPager(Model, page => Url.Action("Index",
    new
    {
        page,
        sortOrder = ViewBag.CurrentSort,
        currentFilter = ViewBag.CurrentFilter
    }));
}﻿
